// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Architecture.Seedwork.Domain;

namespace FinanceManagement.Domain
{
    public class FM_CashSweep : EntityBase
    {
       
        public FM_CashSweep()
        {
            DataDate = CreatedDate = ModifiedDate = DateTime.Now;
            EnterpriseID =  NumericalOrder = AccountID = SweepDirectionID = SweepType = OwnerID  = "0";
            Lines = new List<FM_CashSweepDetail>();
        }

        public void AddDetail(FM_CashSweepDetail detail)
        {
            Lines.Add(detail);
        }


        public void Update(DateTime DataDate, string AccountID, string SweepDirectionID,string SweepType, string Remarks, DateTime? ExcuteDate, long? ExcuterID
            ,string CollectionScheme,string SchemeType, DateTime? AutoTime,decimal? SchemeAmount,decimal? Rate,string PlanType, string SchemeFormula,string SchemeTypeName)
        {
            this.DataDate = DataDate;
            this.AccountID = AccountID;
            this.SweepDirectionID = SweepDirectionID;
            this.SweepType = SweepType;
            this.Remarks = Remarks;
            this.ExcuteDate = ExcuteDate;
            this.ExcuterID = ExcuterID;
            this.ModifiedDate = DateTime.Now;
            this.CollectionScheme = CollectionScheme;
            this.SchemeType = SchemeType;
            this.AutoTime = AutoTime;
            this.SchemeAmount = SchemeAmount;
            this.Rate = Rate;
            this.PlanType = PlanType;
            this.SchemeFormula = SchemeFormula;
            this.SchemeTypeName = SchemeTypeName;
        }
        public void UpdateIsUse(bool IsUse, DateTime? ExcuteDate, long? ExcuterID)
        {
            this.IsUse = IsUse;
            this.ExcuteDate = ExcuteDate;
            this.ExcuterID = ExcuterID;
        }
        public void UpdateDate(DateTime? ExcuteDate, long? ExcuterID)
        {
            this.ExcuteDate = ExcuteDate;
            this.ExcuterID = ExcuterID;
        }
        [Key]
        
        public string NumericalOrder { get; set; }
        
       public string EnterpriseID { get; set; }
        
        public DateTime DataDate { get; set; }
        
       public string Number { get; set; }
        
       public string AccountID { get; set; }
        
       public string SweepDirectionID { get; set; }
        
       public string SweepType { get; set; }
        
        public string Remarks { get; set; }
        
       public string OwnerID { get; set; }
       
        public DateTime CreatedDate { get; set; }
        
        public DateTime ModifiedDate { get; set; }
       
        public DateTime? ExcuteDate { get; set; }
        
       public long? ExcuterID { get; set; }
        public List<FM_CashSweepDetail> Lines { get; set; }
        public string CollectionScheme { get; set; }
        public bool IsUse { get; set; }
        /// <summary>
        /// 自动归集时间
        /// </summary>
        public DateTime? AutoTime { get; set; }
        /// <summary>
        /// 归集类型 对应coll_type
        /// </summary>
        public string SchemeType { get; set; }
        /// <summary>
        /// 方案金额 对应amount
        /// </summary>
        public decimal? SchemeAmount { get; set; }
        /// <summary>
        /// 方案比例 对应rate
        /// </summary>
        public decimal? Rate { get; set; }
        /// <summary>
        /// 资金计划类型 对应plan_type
        /// </summary>
        public string PlanType { get; set; }
        /// <summary>
        /// 归集公式
        /// </summary>
        public string SchemeFormula { get; set; }
        /// <summary>
        /// 归集方案类型名称
        /// </summary>
        public string SchemeTypeName { get; set; }
        public bool IsNew { get; set; }
        /// <summary>
        /// 定时任务ID
        /// </summary>
        public int? JobID { get; set; }
    }


    public class FM_CashSweepDetail : EntityBase
    {
 
        public FM_CashSweepDetail()
        {
            NumericalOrder = EnterpriseID = AccountID  = "0";
        }

        public void Update(string EnterpriseID, string AccountID, decimal? AccountBalance, decimal? OtherAccountBalance, decimal? TheoryBalance, decimal? TransformBalance,decimal? AutoSweepBalance,decimal? ManualSweepBalance
            ,string Remark,int? Status,string ExcuteMsg)
        {
            this.EnterpriseID = EnterpriseID;
            this.AccountID = AccountID;
            this.AccountBalance = AccountBalance;
            this.OtherAccountBalance = OtherAccountBalance;
            this.TheoryBalance = TheoryBalance;
            this.TransformBalance = TransformBalance;
            this.AutoSweepBalance = AutoSweepBalance;
            this.ManualSweepBalance = ManualSweepBalance;
            this.Remark = Remark;
            this.Status = Status;
            this.ExcuteMsg = ExcuteMsg;
            this.ModifiedDate = DateTime.Now;
        }
        public void UpdateStatus(int Status, string ExcuteMsg)
        {
            this.Status = Status;
            this.ExcuteMsg = ExcuteMsg;
            //this.Remark = ExcuteMsg;
        }
        [Key]
        public int RecordID { get; set; }
        
       public string NumericalOrder { get; set; }
        
       public string NumericalOrderDetail { get; set; }
        
       public string EnterpriseID { get; set; }
        
       public string AccountID { get; set; }
       
        public decimal? AccountBalance { get; set; }
       
        public decimal? OtherAccountBalance { get; set; }
       
        public decimal? TheoryBalance { get; set; }
       
        public decimal? TransformBalance { get; set; }
       
        public decimal? AutoSweepBalance { get; set; }
       
        public decimal? ManualSweepBalance { get; set; }
        
        public string Remark { get; set; }
        public int? Status { get; set; }
        
        public string ExcuteMsg { get; set; }
        
        public DateTime ModifiedDate { get; set; }
        [ForeignKey("NumericalOrder")]
        public FM_CashSweep FM_CashSweep { get; set; }
        //public long? AccountTransferAbstract { get; set; }
        //public string TransferOrigin { get; set; }
        //public long? ReceiptAbstractID { get; set; }
        //public long? ReceiveTypeID { get; set; }
        //public long? ReceiveTicketedPointID { get; set; }
        //public long? PaymentAbstractID { get; set; }
        //public string PaymentContent { get; set; }
        //public long? PaymentTypeID { get; set; }
        //public long? PaymentTicketedPointID { get; set; }
    }

    #region 账户信息
    public class fd_settlereceiptextend : EntityBase
    {
        [Key]
        public int RecordID { get; set; }
        public string NumericalOrder { get; set; }
        public string NumericalOrderDetail { get; set; }
        public string BankID { get; set; } //银行
        //public string BankName { get; set; }//银行名称
        public string DepositBank { get; set; }//开户行
        public string AccountName { get; set; }//账户名称   
        public string AccountNumber { get; set; }//账户号码
        public DateTime CreatedDate { get; set; }
        public DateTime ModifiedDate { get; set; }
    }
    #endregion

    #region 归集记录
    public class FM_CashSweepLog : EntityBase
    {
        [Key]
        public int RecordID { get; set; }
        public string NumericalOrder { get; set; }
        public string BatchNo { get; set; }//批次号(同一次支付/归集)
        public string ReturnResult { get; set; } //返回前端结果
        public string ResponseResult { get; set; }//接口返回结果
        public string RequestResult { get; set; }//请求参数
        public DateTime ModifiedDate { get; set; }
        //1：交易 2：消息通知 0：返回值
        public int BusType { get; set; }
        public string Remarks { get; set; }
    }
    #endregion
}