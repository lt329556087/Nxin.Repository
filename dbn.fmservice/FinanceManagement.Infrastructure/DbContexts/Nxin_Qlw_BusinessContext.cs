// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Architecture.Seedwork.Infrastructure;
using FinanceManagement.EntityConfigurations;
using FinanceManagement.Infrastructure.EntityConfigurations;
using FinanceManagement.Infrastructure.EntityConfigurations.MarketingProductCostSettingManagement;
using MediatR;
using Microsoft.EntityFrameworkCore;


namespace FinanceManagement.Infrastructure
{
    public partial class Nxin_Qlw_BusinessContext : EFContext
    {


        public Nxin_Qlw_BusinessContext(DbContextOptions<Nxin_Qlw_BusinessContext> options, IMediator mediator)
        : base(options, mediator)
        {
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            #region 业务            
            modelBuilder.ApplyConfiguration(new FD_AccountTransferConfiguration());
            modelBuilder.ApplyConfiguration(new FD_AccountTransferDetailConfiguraion());
            modelBuilder.ApplyConfiguration(new Biz_ReviewConfiguration());
            modelBuilder.ApplyConfiguration(new Biz_RelatedEntityConfigurations());
            modelBuilder.ApplyConfiguration(new biz_relateddetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_AccountInventoryConfiguration());
            modelBuilder.ApplyConfiguration(new FD_AccountInventoryDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BalanceadJustmentConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BalanceadJustmentDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CarryForwardVoucherConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CarryForwardVoucherDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CarryForwardVoucherExtendConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CarryForwardVoucherFormulaConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CarryForwardVoucherRecordConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BadDebtProvisionConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BadDebtProvisionDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BadDebtProvisionExtConfiguration());

            modelBuilder.ApplyConfiguration(new FD_BadDebtOccurConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BadDebtOccurDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BadDebtRecoverConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BadDebtExecutionConfiguratioin());
            modelBuilder.ApplyConfiguration(new FD_BadDebtRecoverDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_VoucherAmortizationConfiguration());
            modelBuilder.ApplyConfiguration(new FD_VoucherAmortizationDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_VoucherAmortizationPeriodDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtSettingConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtSettingDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_SpecificIdentificationConfiguration());
            modelBuilder.ApplyConfiguration(new FD_SpecificIdentificationDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_AccountConfiguration());
            #region 坏账
            modelBuilder.ApplyConfiguration(new FD_BaddebtGroupSettingConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtGroupSettingDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtGroupSettingExtendConfiguration());
            modelBuilder.ApplyConfiguration(new FD_IdentificationTypeConfiguration());
            modelBuilder.ApplyConfiguration(new FD_IdentificationTypeSubjectConfiguration());
            modelBuilder.ApplyConfiguration(new FD_IndividualIdentificationConfiguration());
            modelBuilder.ApplyConfiguration(new FD_IndividualIdentificationDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_IndividualIdentificationExtConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtAccrualConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtAccrualDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtAccrualExtConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtWriteOffConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtWriteOffDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtRecoveryConfiguration());
            modelBuilder.ApplyConfiguration(new FD_BaddebtRecoveryDetailConfiguration());
            #endregion
            #region 成本计算设置
            modelBuilder.ApplyConfiguration(new FmCostparamssetConfiguration());
            modelBuilder.ApplyConfiguration(new FmCostparamssetdetailConfiguration());
            modelBuilder.ApplyConfiguration(new FmCostparamssetextendConfiguration());
            #endregion

            #region 费用项目设置
            modelBuilder.ApplyConfiguration(new FmCostprojectConfiguration());
            modelBuilder.ApplyConfiguration(new FmCostprojectdetailConfiguration());
            modelBuilder.ApplyConfiguration(new FmCostprojectExtendConfiguration());
            #endregion

            #region 费用填报
            modelBuilder.ApplyConfiguration(new fm_expensereportConfiguration());
            modelBuilder.ApplyConfiguration(new fm_expensereportdetailConfiguration());
            modelBuilder.ApplyConfiguration(new fm_expensereportdetaillogConfiguration());
            modelBuilder.ApplyConfiguration(new fm_expensereportextendConfiguration());
            modelBuilder.ApplyConfiguration(new fm_expensereportextendlistConfiguration());
            #endregion

            #region 固定资产
            modelBuilder.ApplyConfiguration(new FA_MarketSubjectConfiguration());
            modelBuilder.ApplyConfiguration(new FA_MarketSubjectDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_PurchaseSettingsConfiguration());
            modelBuilder.ApplyConfiguration(new FA_PurchaseSettingsDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_UseStateTransferConfiguration());
            modelBuilder.ApplyConfiguration(new FA_UseStateTransferDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_AssetsApplyConfiguration());
            modelBuilder.ApplyConfiguration(new FA_AssetsApplyDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_AssetsInspectConfiguration());
            modelBuilder.ApplyConfiguration(new FA_AssetsInspectDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_AssetsContractConfiguration());
            modelBuilder.ApplyConfiguration(new FA_AssetsContractDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_AssetsMaintainConfiguration());
            modelBuilder.ApplyConfiguration(new FA_AssetsMaintainDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_PigAssetsResetConfiguration());
            modelBuilder.ApplyConfiguration(new FA_PigAssetsResetDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_PigAssetsAccrualConfiguration());
            modelBuilder.ApplyConfiguration(new FA_PigAssetsAccrualDetailConfiguration());

            modelBuilder.ApplyConfiguration(new FA_InventoryConfiguration());
            modelBuilder.ApplyConfiguration(new FA_InventoryDetailConfiguration());
            #endregion

            #region 种猪资产原值
            modelBuilder.ApplyConfiguration(new FmPigoriginalassetsConfiguration());
            modelBuilder.ApplyConfiguration(new FmPigoriginalassetsdetailConfiguration());
            modelBuilder.ApplyConfiguration(new FmPigoriginalassetsdetaillistConfiguration());
            #endregion

            #region 付款单-付款处理列表
            modelBuilder.ApplyConfiguration(new FD_PaymentReceivablesConfiguration());
            modelBuilder.ApplyConfiguration(new FD_PaymentReceivablesDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_PaymentExtendConfiguration());
            modelBuilder.ApplyConfiguration(new FD_SettleReceiptConfiguration());
            modelBuilder.ApplyConfiguration(new FD_SettleReceiptDetailConfiguration());
            modelBuilder.ApplyConfiguration(new fd_settletypesetConfiguration());
            modelBuilder.ApplyConfiguration(new fd_schedulesetConfiguration());
            modelBuilder.ApplyConfiguration(new fd_scheduleplanConfiguration());
            modelBuilder.ApplyConfiguration(new fd_receivablessetConfiguration());
            modelBuilder.ApplyConfiguration(new fd_bankreceivableConfiguration());

            #endregion
            #region 结账管理
            modelBuilder.ApplyConfiguration(new FM_AccoCheckConfiguration());
            modelBuilder.ApplyConfiguration(new FM_AccoCheckDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FM_AccoCheckExtendConfiguration());
            modelBuilder.ApplyConfiguration(new FM_AccoCheckRuleConfiguration());
            #endregion
            #region IAP大屏配置
            modelBuilder.ApplyConfiguration(new Nxin_DigitalIntelligenceMapConfiguration());
            #endregion
            #region 资金归集
            modelBuilder.ApplyConfiguration(new FM_CashSweepConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CashSweepDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FD_PayextendConfiguration());
            modelBuilder.ApplyConfiguration(new fd_settlereceiptextendConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CashSweepLogConfiguration());

            modelBuilder.ApplyConfiguration(new FM_CashSweepSettingConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CashSweepSettingDetailConfiguration());
            modelBuilder.ApplyConfiguration(new FM_CashSweepSettingExtConfiguration());
            #endregion
            modelBuilder.ApplyConfiguration(new fd_paymentreceivablesvoucherConfiguration());
            modelBuilder.ApplyConfiguration(new FM_PerformanceIncomeConfiguration());
            modelBuilder.ApplyConfiguration(new fd_paymentreceivablesvoucherdetailConfiguration());
            modelBuilder.ApplyConfiguration(new Biz_Related_FMEntityConfigurations());
            #endregion
            modelBuilder.ApplyConfiguration(new fm_transferrealtimeConfiguration());
            modelBuilder.ApplyConfiguration(new fm_transferrealtimedetailConfiguration());
            modelBuilder.ApplyConfiguration(new fm_voucheramortizationrelatedConfiguration());

            #region 配方商品价格设定
            modelBuilder.ApplyConfiguration(new MS_FormulaProductPriceConfiguration());
            modelBuilder.ApplyConfiguration(new MS_FormulaProductPriceDetailConfiguration());
            modelBuilder.ApplyConfiguration(new MS_FormulaProductPriceExtConfiguration());
            #endregion

            #region 营销商品成本设定详情
            modelBuilder.ApplyConfiguration(new FD_MarketingProductCostSettingEntityConfiguration());
            modelBuilder.ApplyConfiguration(new FD_MarketingProductCostSettingDetailEntityConfiguration());

            #endregion
            #region 进销存业务
            modelBuilder.ApplyConfiguration(new MS_FormulaConfiguration());
            modelBuilder.ApplyConfiguration(new MS_FormulaDetailConfiguration());
            modelBuilder.ApplyConfiguration(new MS_FormulaExtendConfiguration());

            #endregion

            modelBuilder.ApplyConfiguration(new biz_datadictConfiguration());
            modelBuilder.ApplyConfiguration(new fd_auxiliaryprojectConfiguration());
            modelBuilder.ApplyConfiguration(new fd_auxiliarytypeConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
