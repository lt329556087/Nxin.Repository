// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using FinanceManagement.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace FinanceManagement.Infrastructure
{
    public class FD_PaymentReceivablesConfiguration : IEntityTypeConfiguration<FD_PaymentReceivables>
    {
        public void Configure(EntityTypeBuilder<FD_PaymentReceivables> entity)
        {
            entity.HasKey(e => e.NumericalOrder)
                .HasName("PRIMARY");

            entity.HasComment("收付款");

            entity.HasIndex(e => e.DataDate)
                .HasName("idx_DataDate");

            entity.HasIndex(e => e.Guid)
                .HasName("idx_Guid");

            entity.HasIndex(e => e.TicketedPointID)
                .HasName("idx_TicketedPointID");

            entity.HasIndex(e => new { e.EnterpriseID, e.SettleReceipType })
                .HasName("idx_EnterpriseID_SettleReceipType");

            entity.Property(e => e.NumericalOrder)
                .HasColumnType("bigint(20)")
                .HasComment("流水号")
                .AddStringToLongConvert();

            entity.Property(e => e.AttachmentNum)
                .HasColumnType("bigint(20)")
                .HasDefaultValueSql("'0'")
                .HasComment("附件数")
                .AddStringToLongConvert();

            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasComment("创建日期");

            entity.Property(e => e.DataDate)
                .HasColumnType("date")
                .HasComment("日期");

            entity.Property(e => e.EnterpriseID)
                .HasColumnType("bigint(20)")
                .HasComment("所属单位ID")
                .AddStringToLongConvert();

            entity.Property(e => e.Guid)
                .HasComment("全球唯一关键字")
                .HasCharSet("utf8")
                .HasCollation("utf8_general_ci");

            entity.Property(e => e.IsPush)
                .HasColumnType("bit(1)")
                .HasDefaultValueSql("b'0'")
                .HasComment("是否推送");

            entity.Property(e => e.IsGroupPay)
                .HasColumnType("bit(1)")
                .HasDefaultValueSql("b'0'")
                .HasComment("是否来自集中支付（付款单）");

            entity.Property(e => e.ModifiedDate)
                .HasColumnType("timestamp")
                .HasDefaultValueSql("CURRENT_TIMESTAMP")
                .HasComment("最后修改日期")
                .ValueGeneratedOnAddOrUpdate();

            entity.Property(e => e.Number)
                .HasColumnType("bigint(20)")
                .HasComment("单据号")
                .AddStringToLongConvert();

            entity.Property(e => e.OwnerID)
                .HasColumnType("bigint(20)")
                .HasComment("制单人ID")
                .AddStringToLongConvert();

            entity.Property(e => e.Remarks)
                .HasColumnType("varchar(1024)")
                .HasComment("备注")
                .HasCharSet("utf8")
                .HasCollation("utf8_general_ci");

            entity.Property(e => e.SettleReceipType)
                .HasColumnType("bigint(20)")
                .HasComment("类型（字典表）")
                .AddStringToLongConvert();

            entity.Property(e => e.TicketedPointID)
                .HasColumnType("bigint(20)")
                .HasComment("字号（开票点）")
                .AddStringToLongConvert();
        }
    }
}
